name: Monthly Build

on:
  workflow_dispatch:
  schedule:
    - cron: 0 0 12 * *

jobs:
  build:
    name: Pull and Release
    runs-on: ubuntu-latest
    steps:
      - name: Check out repo
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: git tag
        uses: actions/github-script@v3
        id: tag
        with:
          script: |
            const now = new Date()
            return `${now.getFullYear()}${(now.getMonth() + 1).toString().padStart(2, '0')}${now.getDate().toString().padStart(2, '0')}`
          result-encoding: string

      - name: Download file
        env:
          LICENSE_KEY: ${{ secrets.LICENSE_KEY }}
        run: |
          wget -O ./GeoLite2-Country.tar.gz "https://download.maxmind.com/app/geoip_download?edition_id=GeoLite2-Country&license_key=${LICENSE_KEY}&suffix=tar.gz"
          wget -O ./GeoLite2-City.tar.gz "https://download.maxmind.com/app/geoip_download?edition_id=GeoLite2-City&license_key=${LICENSE_KEY}&suffix=tar.gz"
          wget -O ./GeoLite2-ASN.tar.gz "https://download.maxmind.com/app/geoip_download?edition_id=GeoLite2-ASN&license_key=${LICENSE_KEY}&suffix=tar.gz"
          ls *.tar.gz | xargs -n1 tar xzvf          
          mkdir dist
          mv ./GeoLite2-Country_*/GeoLite2-Country.mmdb ./dist/Country.mmdb
          mv ./GeoLite2-City_*/GeoLite2-City.mmdb ./dist/City.mmdb
          mv ./GeoLite2-ASN_*/GeoLite2-ASN.mmdb ./dist/ASN.mmdb

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          draft: false
          prerelease: false
          generate_release_notes: false
          fail_on_unmatched_files: true
          tag_name: ${{ steps.tag.outputs.result }}
          files: |
            dist/*.mmdb
